name: CI Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch: {}

permissions:
  contents: read
  packages: write

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install lint tools
        run: |
          python -m pip install --upgrade pip
          pip install ruff==0.6.7 black==24.8.0

      - name: Run Ruff (lint check)
        run: ruff check .

      - name: Run Black (format check)
        run: black  .


  test:
    needs: lint
    runs-on: ubuntu-latest
    env:
      DVC_GDRIVE_CLIENT_ID: ${{ secrets.DVC_GDRIVE_CLIENT_ID }}
      DVC_GDRIVE_CLIENT_SECRET: ${{ secrets.DVC_GDRIVE_CLIENT_SECRET }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pytest httpx ruff==0.6.7

      - name: Install DVC
        if: ${{ hashFiles('.dvc/config') != '' }}
        run: pip install "dvc[gdrive]==3.55.2"

      - name: Configure DVC GDrive OAuth
        if: ${{ hashFiles('.dvc/config') != '' && env.DVC_GDRIVE_CLIENT_ID != '' && env.DVC_GDRIVE_CLIENT_SECRET != '' }}
        run: |
          dvc remote modify origin gdrive_client_id "${DVC_GDRIVE_CLIENT_ID}"
          dvc remote modify origin gdrive_client_secret "${DVC_GDRIVE_CLIENT_SECRET}"

      - name: Pull DVC artifacts
        if: ${{ hashFiles('.dvc/config') != '' }}
        run: dvc pull -v

      - name: Run tests
        run: pytest -q

  docker-build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: |
            ghcr.io/${{ github.repository_owner }}/cidco-api:latest
            ghcr.io/${{ github.repository_owner }}/cidco-api:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
